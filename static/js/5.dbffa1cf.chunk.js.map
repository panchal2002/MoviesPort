{"version":3,"sources":["Utils/Truncate.js","Components/WithSpinner/WithSpinnerMovie.js","Components/CollectionItem/CollectionItem.js","Components/CollectionPreview/CollectionPreview.js","Utils/ScrollArrows.js","Utils/TitleHide.js","Redux/Collection/collection-selectors.js","Components/CollectionOverview/CollectionOverview.js","Components/CollectionOverview/CollectionOverviewMovie.js"],"names":["Truncate","str","length","ending","substring","WithSpinnerMovie","WrappedComponent","isMovieGridLoading","isMovieOverviewLoading","otherProps","withRouter","item","movies","tvshow","history","title","overview","backdrop_path","name","para","titlePath","FixString","namePath","className","onClick","push","src","IMAGE_BASE_URL","GRID_IMAGE_SIZE","alt","AddToList","CollectionPreview","onLeftClick","node","move","current","margin","parseInt","$","css","console","log","window","matchMedia","matches","animate","marginLeft","LeftArrow","divRef","onRightClick","RightArrow","React","createRef","querySelector","preview","addEventListener","setTimeout","setAttribute","TitleHide","ReactDOM","findDOMNode","this","props","movieItems","tvItems","start","end","movieData","slice","tvData","toUpperCase","icon","faChevronLeft","faChevronRight","ref","map","id","Component","connect","state","selectMovieItems","selectTVItems","selectCollectionData","createSelector","collection","items","mapStateToProps","createStructuredSelector","selectIsMovieFetching","CollectionOverviewMovie","compose","CollectionOverview"],"mappings":"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","file":"static/js/5.dbffa1cf.chunk.js","sourcesContent":["const Truncate = function(str, length, ending) {\r\n  if (length == null) {\r\n    length = 150;\r\n  }\r\n  if (ending == null) {\r\n    ending = \"...\";\r\n  }\r\n  if (str.length > length) {\r\n    return str.substring(0, length - ending.length) + ending;\r\n  } else {\r\n    return str;\r\n  }\r\n};\r\n\r\nexport default Truncate;\r\n","import React from \"react\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst WithSpinnerMovie = WrappedComponent => \r\n  ({ isMovieGridLoading,isMovieOverviewLoading, ...otherProps }) => {\r\n    \r\n      return isMovieGridLoading\r\n        ? <Spinner />\r\n        : (isMovieOverviewLoading\r\n          ? null\r\n          : <WrappedComponent {...otherProps} />)\r\n       \r\n};\r\n\r\nexport default WithSpinnerMovie;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL, GRID_IMAGE_SIZE } from \"../../Config/config\";\r\nimport \"./CollectionItem.scss\";\r\nimport Truncate from \"../../Utils/Truncate\";\r\nimport { withRouter } from \"react-router\";\r\nimport { FixString } from \"../../Utils/FixString\";\r\nimport AddToList from \"../AddToList/AddToList\";\r\n\r\nconst CollectionItem = ({ item, movies, tvshow, history }) => {\r\n  const { title, overview, backdrop_path, name } = item;\r\n  const para = Truncate(overview, 150, \" ..read more\");\r\n  var titlePath = movies ? FixString(title) : null;\r\n  var namePath = tvshow ? FixString(name) : null;\r\n  return (\r\n    <>\r\n      {(backdrop_path) &&\r\n        <div className=\"collection-item\">\r\n          <div onClick={() => {\r\n            return movies\r\n              ? history.push(`/movies/${titlePath}`)\r\n              : history.push(`/tvshows/${namePath}`);\r\n          }}\r\n          >\r\n            <img\r\n              src={`${IMAGE_BASE_URL}${GRID_IMAGE_SIZE}${backdrop_path}`}\r\n              alt=\"movie\"\r\n              className=\"collection-item__movie-image\"\r\n            />\r\n            <div className=\"collection-item__text\">\r\n              <h1 className=\"collection-item__title\">{title}</h1>\r\n              <h1 className=\"collection-item__title\">{name}</h1>\r\n              <span className=\"collection-item__overview\">{para}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"collection-item__addtolist\">\r\n            <AddToList item={item} />\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CollectionItem);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./CollectionPreview.scss\";\r\nimport CollectionItem from \"../CollectionItem/CollectionItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectMovieItems } from \"../../Redux/Movie/movie-selectors\";\r\nimport { selectTVItems } from \"../../Redux/TVShow/tv-selectors\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { TitleHide } from \"../../Utils/TitleHide\";\r\nimport { LeftArrow, RightArrow } from \"../../Utils/ScrollArrows\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nclass CollectionPreview extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.divRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    var node = ReactDOM.findDOMNode(this);\r\n    TitleHide(node);\r\n  }\r\n\r\n  onLeftClick = () => {\r\n    LeftArrow(this.divRef);\r\n  };\r\n\r\n  onRightClick = () => {\r\n    RightArrow(this.divRef);\r\n  };\r\n\r\n  render() {\r\n    const { title,movieItems,tvItems,start,end,movies,tvshow } = this.props;\r\n    const movieData = movieItems.slice(start, end);\r\n    const tvData = tvItems.slice(start, end);\r\n    return (\r\n      <Fade>\r\n        <div className=\"collection-preview\">\r\n          <h1 className=\"collection-preview__title\">{title.toUpperCase()}</h1>\r\n\r\n          <div className=\"collection-preview__box\">\r\n            <span className=\"collection-preview__left-arrow\">\r\n              <FontAwesomeIcon\r\n                icon={faChevronLeft}\r\n                className=\"collection-preview__left-arrow-icon\"\r\n                onClick={this.onLeftClick}\r\n              />\r\n            </span>\r\n            <span className=\"collection-preview__right-arrow\">\r\n              <FontAwesomeIcon\r\n                icon={faChevronRight}\r\n                className=\"collection-preview__right-arrow-icon\"\r\n                onClick={this.onRightClick}\r\n              />\r\n            </span>\r\n            <div className=\"collection-preview__inner\" ref={this.divRef}>\r\n              {movies\r\n                ? movieData.map(item => (\r\n                    <CollectionItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      movies={movies}\r\n                      tvshow={tvshow}\r\n                    />\r\n                  ))\r\n                : null}\r\n              {tvshow\r\n                ? tvData.map(item => (\r\n                    <CollectionItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      movies={movies}\r\n                      tvshow={tvshow}\r\n                    />\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movieItems: selectMovieItems(state),\r\n  tvItems: selectTVItems(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPreview);\r\n","import $ from \"jquery\";\r\n\r\nexport const LeftArrow = node => {\r\n  var move = node.current;\r\n  var margin = parseInt($(move).css(\"margin-left\"));\r\n  console.log(margin);\r\n\r\n  if (window.matchMedia(\"(min-width: 768px)\").matches) {\r\n    if (margin < 0) {\r\n      $(move).animate(\r\n        {\r\n          marginLeft: \"+=330px\"\r\n        },\r\n        \"slow\"\r\n      );\r\n    }\r\n  }\r\n\r\n  if (window.matchMedia(\"(max-width: 768px)\").matches) {\r\n    if (margin < 0) {\r\n      $(move).animate(\r\n        {\r\n          marginLeft: \"+=275px\"\r\n        },\r\n        \"slow\"\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport const RightArrow = node => {\r\n  var move = node.current;\r\n  var margin = parseInt($(move).css(\"margin-left\"));\r\n  console.log(margin);\r\n\r\n  if (window.matchMedia(\"(min-width: 768px)\").matches) {\r\n    if (margin > -1650) {\r\n      $(move).animate(\r\n        {\r\n          marginLeft: \"-=330px\"\r\n        },\r\n        \"slow\"\r\n      );\r\n    }\r\n  }\r\n\r\n  if (window.matchMedia(\"(max-width: 768px)\").matches) {\r\n    if (margin > -1800) {\r\n      $(move).animate(\r\n        {\r\n          marginLeft: \"-=275px\"\r\n        },\r\n        \"slow\"\r\n      );\r\n    }\r\n  }\r\n};\r\n","export const TitleHide = node => {\r\n  let title = node.querySelector(\"h1\");\r\n  let preview = node.querySelector(\".collection-item\");\r\n\r\n  if (preview) {\r\n    preview.addEventListener(\"mouseover\", function() {\r\n      setTimeout(function() {\r\n        title.setAttribute(\"style\", \"opacity:0; \");\r\n      }, 250);\r\n    });\r\n  }\r\n\r\n  if (preview) {\r\n    preview.addEventListener(\"mouseleave\", function() {\r\n      setTimeout(function() {\r\n        title.setAttribute(\"style\", \"opacity:1; \");\r\n      }, 250);\r\n    });\r\n  }\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectCollection = state => state.collection;\r\n\r\nexport const selectCollectionData = createSelector(\r\n  [selectCollection],\r\n  collection => collection.collection\r\n);","import React from \"react\";\r\nimport \"./CollectionOverview.scss\";\r\nimport CollectionPreview from \"../CollectionPreview/CollectionPreview\";\r\nimport {connect} from 'react-redux';\r\nimport {selectCollectionData} from '../../Redux/Collection/collection-selectors';\r\n\r\nconst CollectionOverview = ({ movies, tvshow, collection }) => (\r\n  <div className=\"collection-overview\">\r\n    {collection.map(items => (\r\n      <CollectionPreview\r\n        key={items.id}\r\n        title={items.title}\r\n        start={items.start}\r\n        end={items.end}\r\n        movies={movies}\r\n        tvshow={tvshow}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  collection: selectCollectionData(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionOverview);\r\n","import { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { selectIsMovieFetching } from \"../../Redux/Movie/movie-selectors\";\r\n\r\nimport WithSpinnerMovie from \"../WithSpinner/WithSpinnerMovie\";\r\nimport CollectionOverview from \"./CollectionOverview\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isMovieOverviewLoading: selectIsMovieFetching,\r\n});\r\n\r\nconst CollectionOverviewMovie = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinnerMovie\r\n)(CollectionOverview);\r\n\r\nexport default CollectionOverviewMovie;\r\n"],"sourceRoot":""}